node {
  stage('SCM') {
    checkout scm
  }

  stage('Prepare environment') {
    steps {
      // Crea virtualenv e instala dependencias locales dentro del workspace
      sh '''
        set -e
        python3 -m venv .venv
        . .venv/bin/activate
        pip install --upgrade pip
        pip install -r requirements.txt
      '''
    }
  }

  stage('SonarQube Analysis') {
    steps {
      def scannerHome = tool 'sonar' // configurar en Manage Jenkins -> Global Tool Config
      withCredentials([string(credentialsId: 'sonar-token', variable: 'SONAR_TOKEN')]) {
        withSonarQubeEnv('sonar') {
          sh "${scannerHome}/bin/sonar-scanner"
        }
      }
    }
  }

  stage('Generate PDF report') {
    steps {
      // Ejecuta el script dentro del virtualenv. Si wkhtmltopdf est√° en PATH del sistema, no hace falta pasar ruta.
      sh '''
        set -e
        . .venv/bin/activate
        python3 generate_report.py --sonar-url http://192.168.100.236:9000 --project-key test_php --token ${SONAR_TOKEN} --output report.pdf --template report_template.html
      '''
    }
  }

  stage('Send Email') {
    steps {
      emailext subject: "SonarQube report: ${env.JOB_NAME} #${env.BUILD_NUMBER}",
              body: "Adjunto el informe PDF de SonarQube para test_php.",
              to: "sergio.zabbix01@gmail.com",
              attachmentsPattern: "report.pdf"
    }
  }
}